variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - /root/.m2/repository/

# This will only validate and compile stuff and run e.g. maven-enforcer-plugin. 
# Because some enforcer rules might check dependency convergence and class duplications
# we use `test-compile` here instead of `validate`, so the correct classpath is picked up.
buildandtest:
  image: maven:3.3.9-jdk-8
  stage: build
  tags:
  - shared
  script:
    - 'mvn $MAVEN_CLI_OPTS package'
  artifacts:
    paths:
    - target/petclinic.war

# For `master` branch run `mvn deploy` automatically.
# Here you need to decide whether you want to use JDK7 or 8.
# To get this working you need to define a volume while configuring your gitlab-ci-multi-runner.
# Mount your `settings.xml` as `/root/.m2/settings.xml` which holds your secrets.
# See https://maven.apache.org/settings.html
deploy:jdk8:
  # Use stage test here, so the pages job may later pickup the created site.
  stage: test
  tags:
  - deploy
  - test
#  script:
#    - 'mvn $MAVEN_CLI_OPTS deploy site site:stage'
  only:
    - master
  script:
  - ls -al *
  - cp target/petclinic.war /opt/tomcat/webapps
  # Archive up the built documentation site.
#  artifacts:
#    paths:
#    - target/staging

uitests:
  stage: test
  image: maven:3.3.9-jdk-8
  tags:
  - shared
  only: 
  - master
  script:
  - apt-get update
  - apt-get install -y vnc4server imagemagick iceweasel fluxbox xvfb
  - mkdir /tmp/.X11-unix && chmod 1777 /tmp/.X11-unix/
  - set XAUTHORITY /root/.Xauthority
  - mkdir /root/.vnc && (echo changeme; echo changeme) | vncpasswd /root/.vnc/passwd
  - touch /root/.vnc/xstartup && chmod a+x /root/.vnc/xstartup
  - export DISPLAY=:99
  - 'Xvfb $DISPLAY -screen 0 &'
  - 'fluxbox -display :99 &'
  - 'mvn $MAVEN_CLI_OPTS -f uitests test'

#pages:
#  image: busybox:latest
#  stage: deploy
#  script:
    # Because Maven appends the artifactId automatically to the staging path if you did define a parent pom,
    # you might need to use `mv target/staging/YOUR_ARTIFACT_ID public` instead.
#    - mv target/staging public
#  dependencies:
#    - deploy:jdk8
#  artifacts:
#    paths:
#    - public
#  only:
#    - master
